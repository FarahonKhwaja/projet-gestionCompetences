/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import gestionFichiers.lecteur;
import gestioncompetences.Competence;
import gestioncompetences.Personne;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Entrax
 */
public class DetailsPersonne extends javax.swing.JFrame {

    private static int idPersonne;
    private static String nom, prenom;
    private Personne personne;
    private final HashMap<Integer, ArrayList<String>> competencesPersonnel = lecteur.getCompetencesParPersonne(lecteur.cheminCompetencesPersonnel);

    /**
     * Creates new form jFrameDetailsPersonne
     */
    public DetailsPersonne(int idPersonne, String nom, String prenom) throws IOException {
        initComponents();
        DetailsPersonne.idPersonne = idPersonne;
        DetailsPersonne.nom = nom;
        DetailsPersonne.prenom = prenom;
        jLabelNomPersonne.setText(nom);
        jLabelPrenomPersonne.setText(prenom);

        this.personne = Personne.getPersonneById(idPersonne);
        if (this.personne == null) {
            this.personne = new Personne(nom, prenom, idPersonne);
        }

        this.personne.addCompetence(competencesPersonnel);
        ArrayList<Competence> competencePersonne = new ArrayList<>();
        competencePersonne = this.personne.getCompetences();
        for (Competence cp : competencePersonne) {
            tableCompetencesPersonneModel.addRow(new Object[]{cp.getIdCompetence(), cp.getNomEN(), cp.getNomFR()});
        }
        for (Competence competence : lecteur.getCompetences(lecteur.cheminCompetences)) {
            comboBoxCompetencesPersonneModel.addElement(competence.toString());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonSaveCompetencesPersonne = new javax.swing.JButton();
        jButtonAddCompetencePersonne = new javax.swing.JButton();
        comboBoxCompetencesPersonneModel = new DefaultComboBoxModel<String>(new String [] {});
        jComboBoxCompetencesPersonne = new javax.swing.JComboBox<>();
        jButtonDeleteCompetencePersonne = new javax.swing.JButton();
        jLabelNomPersonne = new javax.swing.JLabel();
        jLabelPrenomPersonne = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCompetencesPersonneModel = new DefaultTableModel(
            new Object [][] {},
            new String [] {
                "Identifiant", "Libellé EN", "Libellé FR"
            });
            jTableCompetencesPersonne = new javax.swing.JTable();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            setTitle("Détails Personnel");

            jButtonSaveCompetencesPersonne.setText("Enregister");
            jButtonSaveCompetencesPersonne.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButtonSaveCompetencesPersonneMouseClicked(evt);
                }
            });

            jButtonAddCompetencePersonne.setText("Ajouter");
            jButtonAddCompetencePersonne.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButtonAddCompetencePersonneMouseClicked(evt);
                }
            });

            jComboBoxCompetencesPersonne.setModel(comboBoxCompetencesPersonneModel);

            jButtonDeleteCompetencePersonne.setText("Supprimer");
            jButtonDeleteCompetencePersonne.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jButtonDeleteCompetencePersonneMouseClicked(evt);
                }
            });

            jTableCompetencesPersonne.setAutoCreateRowSorter(true);
            jTableCompetencesPersonne.setModel(tableCompetencesPersonneModel);
            jScrollPane2.setViewportView(jTableCompetencesPersonne);

            javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(0, 652, Short.MAX_VALUE)
                            .addComponent(jButtonDeleteCompetencePersonne)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jComboBoxCompetencesPersonne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonAddCompetencePersonne)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonSaveCompetencesPersonne))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabelNomPersonne)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabelPrenomPersonne)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabelNomPersonne)
                        .addComponent(jLabelPrenomPersonne))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonSaveCompetencesPersonne)
                        .addComponent(jButtonAddCompetencePersonne)
                        .addComponent(jComboBoxCompetencesPersonne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonDeleteCompetencePersonne))
                    .addContainerGap())
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveCompetencesPersonneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveCompetencesPersonneMouseClicked
        // TODO add your handling code here:
        for (Iterator<Competence> iterator = this.personne.getCompetences().iterator(); iterator.hasNext();) {
            Competence cp = iterator.next();
            iterator.remove();
        }
        for (int i = 0; i < tableCompetencesPersonneModel.getRowCount(); i++) {
            Competence cp = new Competence(tableCompetencesPersonneModel.getValueAt(i, 0).toString(),
                    tableCompetencesPersonneModel.getValueAt(i, 1).toString(),
                    tableCompetencesPersonneModel.getValueAt(i, 2).toString());
            this.personne.addCompetence(cp);
        }
        ArrayList<String> idCompetences = new ArrayList<>();
        for (Competence cp : this.personne.getCompetences()) {
            idCompetences.add(cp.getIdCompetence());
        }
        competencesPersonnel.put(this.personne.getId(), idCompetences);

        try {
            gestionFichiers.writer.sauvegarderCompetencesPersonnel(competencesPersonnel);
        } catch (IOException ex) {
            Logger.getLogger(DetailsPersonne.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.dispose();
    }//GEN-LAST:event_jButtonSaveCompetencesPersonneMouseClicked

    private void jButtonDeleteCompetencePersonneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDeleteCompetencePersonneMouseClicked
        // TODO add your handling code here:
        if (jTableCompetencesPersonne.getSelectedRow() != -1) {
            tableCompetencesPersonneModel.removeRow(jTableCompetencesPersonne.getSelectedRow());
        }
    }//GEN-LAST:event_jButtonDeleteCompetencePersonneMouseClicked

    private void jButtonAddCompetencePersonneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddCompetencePersonneMouseClicked
        // TODO add your handling code here:
        if (comboBoxCompetencesPersonneModel.getSelectedItem() != null) {
            Competence cp = new Competence(comboBoxCompetencesPersonneModel.getSelectedItem().toString());
            tableCompetencesPersonneModel.addRow(new Object[]{cp.getIdCompetence(), cp.getNomEN(), cp.getNomFR()});
        }
    }//GEN-LAST:event_jButtonAddCompetencePersonneMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DetailsPersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DetailsPersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DetailsPersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DetailsPersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new DetailsPersonne(DetailsPersonne.idPersonne, DetailsPersonne.nom, DetailsPersonne.prenom).setVisible(true);

                } catch (IOException ex) {
                    Logger.getLogger(DetailsPersonne.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddCompetencePersonne;
    private javax.swing.JButton jButtonDeleteCompetencePersonne;
    private javax.swing.JButton jButtonSaveCompetencesPersonne;
    private javax.swing.JComboBox<String> jComboBoxCompetencesPersonne;
    private javax.swing.JLabel jLabelNomPersonne;
    private javax.swing.JLabel jLabelPrenomPersonne;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableCompetencesPersonne;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel tableCompetencesPersonneModel;
    DefaultComboBoxModel<String> comboBoxCompetencesPersonneModel;
}
